<?php

/**
 * @file
 *  Redirects the user, when he is on a domain without a variant, to the most
 *  suitable domain variant, based on geo information and language.
 */

/**
 * Implements hook_menu().
 */
function dv_georedirect_menu() {
  $items = array();
  $items['admin/structure/domain/variants/georedirect'] = array(
    'title' => 'GEO Redirect',
    'access arguments' => array('administer domains'),
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dv_georedirect_config_form'),
    'file' => 'dv_georedirect.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_init().
 */
function dv_georedirect_init() {
  $path = current_path();
  $options = array('query' => drupal_get_query_parameters());
  $http_response_code = 302;
  if (_dv_georedirect_modify_redirect($path, $options, $http_response_code)) {
    $dv_georedirect_drupal_goto_alter_enabled =& drupal_static('dv_georedirect_drupal_goto_alter_enabled');
    $dv_georedirect_drupal_goto_alter_enabled = FALSE;
    drupal_goto($path, $options, $http_response_code);
  }
}

/**
 * Implements drupal_goto_alter().
 */
function dv_georedirect_drupal_goto_alter(&$path, &$options, &$http_response_code) {
  if (drupal_static('dv_georedirect_drupal_goto_alter_enabled', TRUE)) {
    _dv_georedirect_modify_redirect($path, $options, $http_response_code);
  }
}

/**
 * Implements hook_redirect_alter().
 */
function dv_georedirect_redirect_alter(&$redirect) {
  _dv_georedirect_modify_redirect($redirect->redirect, $redirect->redirect_options, $redirect->status_code);
}

/**
 * Searches the best variant for an user, based on the geoip and language
 * information.
 */
function dv_georedirect_search_variants() {

  // First, check if we can get the country of the user.
  // Check first if we have to overwrite the country code from $_GET.
  if (_dv_georedirect_setting('override_geoip_from_get')) {
    $param_name = _dv_georedirect_setting('get_param_name');
    $param_value = (isset($_GET[$param_name]) && is_scalar($_GET[$param_name])) ? $_GET[$param_name] : '';
    unset($_GET[$param_name]);
    if (_dv_georedirect_setting('get_param_represents') == 'country_iso_code') {
      $country_code = $param_value;
    }
    elseif (_dv_georedirect_setting('get_param_represents') == 'domain_machine_name') {
      $domain_id = db_select('domain', 'd')
        ->condition('d.machine_name', $param_value)
        ->fields('d', array('domain_id'))
        ->execute()
        ->fetchField();
    }
  }

  if (empty($country_code)) {
    module_load_include('inc', 'domain_variants');
    $country_code = _domain_variants_get_country_code();
  }

  // Second, get the language.
  global $language;

  // If we have the language enabled, then use it, otherwise get it from the
  // browser.
  if (!empty($language)) {
    $langcode = $language->language;
  }
  else {
    // Our function to get the language from the browser is a bit different, it
    // will not check any enabled languages.
    module_load_include('inc', 'domain_variants');
    $browser_languages = _domain_variants_locale_languages_from_browser();
    // These languages are already sorted by quality, so take the first.
    $langcode = reset($browser_languages);
  }
  // The language must always be defined, so if empty, just initialize it with
  // default one.
  if (empty($langcode)) {
    $langcode = language_default('language');
  }

  $base_query = db_select('domain_variants', 'variants')->fields('variants', array('variant_id'));
  $base_query->leftJoin('domain_variants_countries', 'countries', 'countries.variant_id = variants.variant_id');
  $base_query->leftJoin('domain_variants_languages', 'languages', 'languages.variant_id = variants.variant_id');
  $base_query->innerJoin('domain', 'domain', 'domain.domain_id = variants.domain_id');

  if (!user_access('access inactive domains')) {
    $base_query->condition('domain.valid', 1);
  }

  $conditions = array();
  if (!empty($domain_id)) {
    $conditions['variants.domain_id'] = $domain_id;
  }
  if (!empty($country_code)) {
    $conditions['countries.country_code'] = $country_code;
  }
  $conditions['languages.lang_code'] = $langcode;

  // Perform query decreasing the conditions count if there are no results.
  while (!empty($conditions)) {
    $query = clone $base_query;
    foreach ($conditions as $field => $value) {
      $query->condition($field, $value);
    }
    if ($result = $query->execute()->fetchAll()) {
      return $result;
    }
    array_pop($conditions);
  }

  // We did not find any variants, so just return the variants of the default
  // domain.
  $query = clone $base_query;
  $query->condition('domain.is_default', 1);
  $result = $query->execute()->fetchAll();

  // Before returning the default variants, try to find one with appropriate
  // language. If it was not found, try to exclude variants with inappropriate
  // languages. But always leave at least one variant.
  module_load_include('inc', 'domain_variants');
  $langcodes = _domain_variants_locale_languages_from_browser();

  $variants_score = array();
  foreach ($result as $key => $value) {
    $variant = domain_variants_load($value->variant_id);
    if (!empty($variant->languages)) {
      if ($intersection = array_intersect($langcodes, array_keys($variant->languages))) {
        $variants_score[count($intersection)] = array($key => $value);
      }
      else {
        unset($result[$key]);
      }
    }
  }

  // If multiple variants pick the most relevant.
  if (!empty($variants_score)) {
    // Sort by score.
    krsort($variants_score);
    return reset($variants_score);
  }

  return $result;
}

/**
 * Implements hook_form_FORM_ID_alter() for the domain_variants_form.
 */
function dv_georedirect_form_domain_variants_form_alter(&$form, &$form_state) {
  // Add our elements only if we already have a domain variant, so only on the
  // edit form.
  if (!empty($form['variant_id']['#value'])) {
    $variant = domain_variants_load($form['variant_id']['#value']);
    $form['domain_variant']['georedirect'] = array(
      '#type' => 'fieldset',
      '#title' => t('Geo Redirect'),
      '#description' => t('These settings are used to automatically redirect user from the front page to the appropriate domain/language depending on browser settings and/or IP address.'),
    );
    $form['domain_variant']['georedirect']['dv_countries'] = array(
      '#type' => 'textfield',
      '#title' => t('Countries'),
      '#description' => t('Insert the ISO codes of the countries to which this domain variant is attached. Leave empty for all.'),
      '#default_value' => !empty($variant->countries) ? implode(',', array_keys($variant->countries)) : '',
    );
    $form['domain_variant']['georedirect']['dv_languages'] = array(
      '#type' => 'textfield',
      '#title' => t('Languages'),
      '#description' => t('Insert the ISO codes of the languages to which this domain variant is attached. Leave empty for all.'),
      '#default_value' => !empty($variant->languages) ? implode(',', array_keys($variant->languages)) : '',
    );
    // Add our submit handler.
    $form['#submit'][] = 'dv_georedirect_domain_variants_submit';
  }
}

/**
 * Additional submit handler for the domain variants form.
 *
 * It saves the languages and countries for the domain variant.
 */
function dv_georedirect_domain_variants_submit(&$form, &$form_state) {
  // First, delete all the langauges and countries of the domain variant.
  db_delete('domain_variants_countries')->condition('variant_id', $form_state['values']['variant_id'])->execute();
  db_delete('domain_variants_languages')->condition('variant_id', $form_state['values']['variant_id'])->execute();
  // Add the countries.
  if (!empty($form_state['values']['dv_countries'])) {
    $words = explode(',', trim($form_state['values']['dv_countries']));
    foreach ($words as $country_code) {
      $object = new stdClass();
      $object->variant_id = $form_state['values']['variant_id'];
      $object->country_code = $country_code;
      drupal_write_record('domain_variants_countries', $object);
    }
  }
  // Add the languages.
  if (!empty($form_state['values']['dv_languages'])) {
    $words = explode(',', trim($form_state['values']['dv_languages']));
    foreach ($words as $lang_code) {
      $object = new stdClass();
      $object->variant_id = $form_state['values']['variant_id'];
      $object->lang_code = $lang_code;
      drupal_write_record('domain_variants_languages', $object);
    }
  }
}

/**
 * Implements hook_domain_variants_load().
 *
 * This is not yet a real hook, @see domain_variants_load().
 */
function dv_georedirect_domain_variants_load($variant) {
  // Load the languages and countries, if they exist.
  $variant->countries = db_select('domain_variants_countries', 'countries')->fields('countries')->condition('countries.variant_id', $variant->variant_id)->execute()->fetchAllAssoc('country_code');
  $variant->languages = db_select('domain_variants_languages', 'languages')->fields('languages')->condition('languages.variant_id', $variant->variant_id)->execute()->fetchAllAssoc('lang_code');
}

/**
 * Proxies variable_get()/variable_set().
 *
 * If $name is "LIST", returns an array of available setting names.
 */
function _dv_georedirect_setting($name, $value = NULL) {
  static $defaults = array(
    'ensure_on' => 'front',
    'exclude_admin_pages' => TRUE,
    'override_geoip_from_get' => TRUE,
    'get_param_name' => 'country_code',
    'get_param_represents' => 'country_iso_code',
  );
  if ($name === 'LIST') {
    return array_keys($defaults);
  }
  $variable_name = "dv_georedirect_$name";
  if ($value !== NULL) {
    variable_set($variable_name, $value);
  }
  return variable_get($variable_name, (isset($defaults[$name]) ? $defaults[$name] : NULL));
}

/**
 * Checks a redirect that is going to be performed, and corrects its
 * domain-variant/language.
 *
 * @param string $path
 * @param array $options
 * @param int $http_response_code
 *
 * @return bool
 *   Returns TRUE if redirect was modified, FALSE otherwise.
 */
function _dv_georedirect_modify_redirect(&$path, &$options, &$http_response_code) {
  global $_domain_variant;
  if (!empty($_domain_variant)) {
    return FALSE;
  }
  if (!_domain_variant_is_plain_request()) {
    return FALSE;
  }
  if (_dv_georedirect_setting('ensure_on') == 'front' && !drupal_is_front_page()) {
    return FALSE;
  }
  if (_dv_georedirect_setting('ensure_on') == 'all' && _dv_georedirect_setting('exclude_admin_pages') && path_is_admin(current_path())) {
    return FALSE;
  }

  // If we do not have any domain variant, then redirect to the best variant
  // that we can find, based on geoip information and language.
  $variants = dv_georedirect_search_variants();
  foreach ($variants as $key => $value) {
    $variants[$key] = domain_variants_load($value->variant_id);
  }

  if (!empty($variants)) {
    module_load_include('inc', 'domain_variants');

    // Check also if we need change the language.
    $language = isset($options['language']) ? $options['language'] : $GLOBALS['language'];
    $languages = language_list();
    $country_code = _domain_variants_get_country_code();

    $chosen_variant = FALSE;
    $chosen_language = FALSE;

    // Go through variants and pick the best one.
    foreach ($variants as $variant) {
      // If we have a country code, make sure the variant is suitable for that country.
      if (!is_null($country_code)) {
        if (in_array($country_code, array_keys($variant->countries))) {
          if ($langcode = _domain_variant_check_language($variant->variant_id, $language->language)) {
            $chosen_variant = $variant;
            $chosen_language = $languages[$langcode];
          }
        }
      }
      else {
        if ($langcode = _domain_variant_check_language($variant->variant_id, $language->language)) {
          $chosen_variant = $variant;
          $chosen_language = $languages[$langcode];
        }
      }
    }

    if ($chosen_variant && $chosen_language) {
      $options['domain_variant'] = $chosen_variant;
      $options['language'] = $chosen_language;
      return TRUE;
    }
  }
  return FALSE;
}
